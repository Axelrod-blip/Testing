from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder

from app.ui_elements import (
    get_goal_mapping, get_experience_mapping, get_gender_mapping,
    get_injuries_mapping, get_location_mapping
)

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Å—Ç–∞—Ä—Ç–∞ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞
go_keyboard = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="–ü–æ–≥–Ω–∞–ª–∏! üöÄ", callback_data="start_onboarding")]
])

# --- –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞ --- #

def goal_keyboard() -> InlineKeyboardMarkup:
    """Keyboard for selecting fitness goal."""
    builder = InlineKeyboardBuilder()
    goals = get_goal_mapping()
    for text, data in goals.items():
        builder.row(InlineKeyboardButton(text=text, callback_data=data))
    return builder.as_markup()

def experience_keyboard() -> InlineKeyboardMarkup:
    """Keyboard for selecting training experience."""
    builder = InlineKeyboardBuilder()
    levels = get_experience_mapping()
    for text, data in levels.items():
        builder.row(InlineKeyboardButton(text=text, callback_data=data))
    return builder.as_markup()

def gender_keyboard() -> InlineKeyboardMarkup:
    """Keyboard for selecting gender."""
    builder = InlineKeyboardBuilder()
    genders = get_gender_mapping()
    for text, data in genders.items():
        builder.row(InlineKeyboardButton(text=text, callback_data=data))
    return builder.as_markup()

def injuries_keyboard() -> InlineKeyboardMarkup:
    """Keyboard for indicating injuries."""
    builder = InlineKeyboardBuilder()
    injuries = get_injuries_mapping()
    injuries_items = list(injuries.items())
    # –†–∞—Å–ø–æ–ª–∞–≥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –≤ –æ–¥–Ω–æ–º —Ä—è–¥—É
    builder.row(*[InlineKeyboardButton(text=text, callback_data=data) for text, data in injuries_items])
    return builder.as_markup()

def location_keyboard() -> InlineKeyboardMarkup:
    """Keyboard for selecting workout location."""
    builder = InlineKeyboardBuilder()
    locations = get_location_mapping()
    for text, data in locations.items():
        builder.row(InlineKeyboardButton(text=text, callback_data=data))
    return builder.as_markup()

fitness_level_keyboard = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="üë∂ –ù–æ–≤–∏—á–æ–∫", callback_data="level_beginner")],
    [InlineKeyboardButton(text="üèÉ‚Äç‚ôÇÔ∏è –°—Ä–µ–¥–Ω–∏–π", callback_data="level_intermediate")],
    [InlineKeyboardButton(text="üèãÔ∏è‚Äç‚ôÄÔ∏è –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π", callback_data="level_advanced")],
])

# –ù–æ–≤–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫
workouts_per_week_kb = InlineKeyboardMarkup(inline_keyboard=[
    [
        InlineKeyboardButton(text="1 —Ä–∞–∑", callback_data="workouts_1"),
        InlineKeyboardButton(text="2 —Ä–∞–∑–∞", callback_data="workouts_2"),
        InlineKeyboardButton(text="3 —Ä–∞–∑–∞", callback_data="workouts_3"),
    ],
    [
        InlineKeyboardButton(text="4 —Ä–∞–∑–∞", callback_data="workouts_4"),
        InlineKeyboardButton(text="5 —Ä–∞–∑", callback_data="workouts_5"),
        InlineKeyboardButton(text="6 —Ä–∞–∑", callback_data="workouts_6"),
    ],
    [InlineKeyboardButton(text="7 —Ä–∞–∑", callback_data="workouts_7")],
])

workout_place_keyboard = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="üè† –î–æ–º–∞", callback_data="place_home")],
    [InlineKeyboardButton(text="üèãÔ∏è‚Äç‚ôÇÔ∏è –í –∑–∞–ª–µ", callback_data="place_gym")],
    [InlineKeyboardButton(text="üå≥ –ù–∞ —É–ª–∏—Ü–µ", callback_data="place_outdoors")],
])

activity_level_keyboard = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="üõãÔ∏è –ù–∏–∑–∫–∞—è", callback_data="activity_low")],
    [InlineKeyboardButton(text="üö∂‚Äç‚ôÇÔ∏è –°—Ä–µ–¥–Ω—è—è", callback_data="activity_medium")],
    [InlineKeyboardButton(text="‚ö° –í—ã—Å–æ–∫–∞—è", callback_data="activity_high")],
])

# --- –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –ø—Ä–æ—Ñ–∏–ª—è --- #

profile_kb = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text="‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å", callback_data="edit_profile")],
        [InlineKeyboardButton(text="üîÑ –í –Ω–∞—á–∞–ª–æ", callback_data="back_to_start")],
    ]
)

# --- –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞ / –¥–ª—è –∫–æ–º–∞–Ω–¥ --- #

next_step_kb = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text="üí™ –ü–ª–∞–Ω —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫", callback_data="create_workout")],
        [InlineKeyboardButton(text="ü•ó –ü–ª–∞–Ω –ø–∏—Ç–∞–Ω–∏—è", callback_data="create_meal_plan")],
        [InlineKeyboardButton(text="‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –æ—Ç–≤–µ—Ç—ã", callback_data="edit_profile")],
    ]
)

# --- –ù–æ–≤—ã–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –ø–æ—Å–ª–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ --- #

suggest_meal_plan_kb = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text="ü•ó –î–∞, –ø–ª–∞–Ω –ø–∏—Ç–∞–Ω–∏—è!", callback_data="create_meal_plan")],
        [InlineKeyboardButton(text="‚ùå –ù–µ—Ç, —Å–ø–∞—Å–∏–±–æ", callback_data="cancel")]
    ]
)

suggest_workout_plan_kb = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text="üí™ –î–∞, –ø–ª–∞–Ω —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫!", callback_data="create_workout")],
        [InlineKeyboardButton(text="‚ùå –ù–µ—Ç, —Å–ø–∞—Å–∏–±–æ", callback_data="cancel")]
    ]
)